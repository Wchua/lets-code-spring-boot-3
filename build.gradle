plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '3.0.3'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceSets {
    main {
        java {
            srcDirs += "$projectDir/src/generated/"
        }
    }
}


def actuatorDependencies = tasks.register("actuatorDependencies", DependencyReportTask) {
    setConfiguration("runtimeClasspath")
    outputFile = new java.io.File(project.buildDir.absoluteFile, "resources/main/gradle-classpath")
}

tasks
        .matching { it.name != actuatorDependencies.name  }
        .all { it.dependsOn actuatorDependencies  }

dependencies {

    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    implementation 'com.joshlong:dependencies-actuator-spring-boot-starter:0.0.8'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:general"
    implementation('com.querydsl:querydsl-mongodb') {
        exclude module: 'mongo-java-driver'
    }
    implementation 'com.querydsl:querydsl-core'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
